paths:
  /products/{id}:
    parameters:
      - $ref: '../../components/parameters.yaml#/idParam'

    get:
      summary: Get a product details.
      tags:
        - Product
      responses:
        '200':
          description: >
            Successful product details fetch. Returns a product details based 
            on given product ID.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '../../components/schemas/common.yaml#/ResponseStatus'
                  data:
                    $ref: '../../components/schemas/products.yaml#/Product'
    patch:
      summary: Edit a product details.
      tags:
        - Product
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '../../components/schemas/products.yaml#/ProductInput'
      responses:
        '200':
          description: Successful product edit. Returns the edited product.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '../../components/schemas/common.yaml#/ResponseStatus'
                  data:
                    $ref: '../../components/schemas/products.yaml#/Product'
    delete:
      summary: Delete a product.
      tags:
        - Product
      responses:
        '200':
          description: Returns the deleted product.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: ../../components/schemas/common.yaml#/ResponseStatus
                  data:
                    $ref: '../../components/schemas/products.yaml#/Product'

  /products/{id}/price:
    patch:
      summary: Change product price.
      tags:
        - Product
      parameters:
        - $ref: '../../components/parameters.yaml#/idParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                price:
                  type: number
      responses:
        '200':
          description: Returns the product's new pricing information.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: ../../components/schemas/common.yaml#/ResponseStatus
                  data:
                    type: object
                    properties:
                      _id:
                        type: string
                      price:
                        type: number
                      pricePerUnit:
                        type: number
                        format: float
                    example:
                      _id: 507f1f77bcf86cd799439011
                      price: 3000
                      netto: 80.00
                      unit: g
                      pricePerUnit: 37.50
